// File: client/pages/seller/Dashboard.tsx

import { Link as RouterLink, useNavigate } from "react-router-dom";
import { BarChart2, Box, Users, DollarSign } from "lucide-react";
import { useEffect, useState } from "react";
import { useAuth } from "@/contexts/AuthContext";
import { fetchShopBySeller } from "@/lib/api"; // H√†m g·ªçi API GET /api/shops/seller/{sellerId}

// Component ph·ª•: StatCard (Gi·ªØ nguy√™n)
function StatCard({
  title,
  value,
  icon,
}: {
  title: string;
  value: string;
  icon: any;
}) {
  return (
    <div className="bg-[rgba(255,255,255,0.04)] border border-[rgba(255,255,255,0.06)] rounded-2xl p-6 backdrop-blur-md">
      <div className="flex items-start gap-4">
        <div className="p-3 rounded-lg bg-[rgba(255,255,255,0.03)]">{icon}</div>
        <div>
          <div className="text-sm text-slate-300">{title}</div>
          <div className="text-2xl font-semibold text-white">{value}</div>
        </div>
      </div>
    </div>
  );
}

export default function SellerDashboard() {
  const navigate = useNavigate();
  const { user } = useAuth();

  // ‚úÖ 1. TR·∫†NG TH√ÅI: Qu·∫£n l√Ω vi·ªác ki·ªÉm tra ƒë√£ xong ch∆∞a v√† th√¥ng tin Shop
  const [isShopChecked, setIsShopChecked] = useState(false);
  const [shopInfo, setShopInfo] = useState<any>(null); // L∆∞u th√¥ng tin shop n·∫øu t√¨m th·∫•y

  useEffect(() => {
    // 1. Ki·ªÉm tra quy·ªÅn v√† ID
    if (!user || user?.role !== "Seller") {
      navigate("/login");
      return;
    }

    const checkShop = async () => {
      const sellerId = user.id;
      if (!sellerId) {
        setIsShopChecked(true); // ƒê√°nh d·∫•u ƒë√£ ki·ªÉm tra n·∫øu ID kh√¥ng h·ª£p l·ªá
        return;
      }

      try {
        // Backend tr·∫£ v·ªÅ Shop (200 OK) ho·∫∑c n√©m l·ªói 404 (Kh√¥ng t√¨m th·∫•y)
        const shop = await fetchShopBySeller(sellerId);

        // N·∫øu fetchShopBySeller tr·∫£ v·ªÅ d·ªØ li·ªáu h·ª£p l·ªá (Shop t·ªìn t·∫°i)
        if (shop && shop.id) {
          setShopInfo(shop);
        } else {
          // Tr∆∞·ªùng h·ª£p API tr·∫£ v·ªÅ 200 OK nh∆∞ng body r·ªóng (logic DTO)
          navigate("/seller/create-shop");
          return;
        }
      } catch (err: any) {
        // üõë X·ª¨ L√ù L·ªñI 404: T√≠n hi·ªáu Seller ch∆∞a c√≥ Shop
        if (
          err.response &&
          (err.response.status === 404 || err.response.status === 400)
        ) {
          console.warn("Seller ch∆∞a c√≥ Shop, ƒëang chuy·ªÉn h∆∞·ªõng t·∫°o Shop.");
          navigate("/seller/create-shop"); // ‚úÖ Chuy·ªÉn h∆∞·ªõng th√†nh c√¥ng
          return; // D·ª´ng th·ª±c thi useEffect
        }

        // X·ª≠ l√Ω l·ªói nghi√™m tr·ªçng kh√°c (500)
        console.error("L·ªói nghi√™m tr·ªçng khi ki·ªÉm tra Shop:", err);
        navigate("/error");
        return;
      } finally {
        // ‚úÖ ƒê√°nh d·∫•u ƒë√£ ki·ªÉm tra ch·ªâ sau khi logic k·∫øt th√∫c
        setIsShopChecked(true);
      }
    };

    checkShop();
  }, [user, navigate]);

  // -------------------------------------------------------------------
  // ‚úÖ ƒêI·ªÄU KI·ªÜN RENDER: Ch·∫∑n render n·∫øu ch∆∞a ki·ªÉm tra xong
  // -------------------------------------------------------------------
  if (!isShopChecked) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-[#0F172A] text-[#E2E8F0] text-xl">
        ƒêang ki·ªÉm tra tr·∫°ng th√°i C·ª≠a h√†ng...
      </div>
    );
  }

  // N·∫øu ƒë√£ ki·ªÉm tra xong nh∆∞ng shopInfo v·∫´n null/false (c√≥ nghƒ©a l√† ƒë√£ chuy·ªÉn h∆∞·ªõng)
  // Logic n√†y s·∫Ω kh√¥ng bao gi·ªù ch·∫°y t·ªõi n·∫øu navigate th√†nh c√¥ng, nh∆∞ng an to√†n ƒë·ªÉ gi·ªØ.
  if (!shopInfo) {
    return null;
  }

  // -------------------------------------------------------------------
  // ‚úÖ RENDER DASHBOARD CH·ªà KHI isShopChecked L√Ä TRUE V√Ä shopInfo C√ì D·ªÆ LI·ªÜU
  // -------------------------------------------------------------------
  return (
    <div className="min-h-screen bg-[#0F172A] text-[#E2E8F0]">
      <div className="container mx-auto py-8">
        <div className="flex gap-6">
          <aside className="w-64 hidden md:block">
            <div className="space-y-3">
              <h3 className="text-lg font-semibold text-white mb-4">
                {shopInfo.name || "Dashboard Shop"}
              </h3>
              <a
                href="/seller/dashboard"
                className="flex items-center gap-3 px-3 py-2 rounded-lg bg-white/5"
              >
                {<Users size={18} />} B·∫£ng ƒëi·ªÅu khi·ªÉn
              </a>
              <a
                href="/seller/products"
                className="flex items-center gap-3 px-3 py-2 rounded-lg hover:bg-white/5"
              >
                {<Box size={18} />} S·∫£n ph·∫©m
              </a>
              <a
                href="/seller/shop"
                className="flex items-center gap-3 px-3 py-2 rounded-lg hover:bg-white/5"
              >
                {<BarChart2 size={18} />} Th√¥ng tin shop
              </a>
            </div>
          </aside>

          <main className="flex-1">
            <div className="flex items-center justify-between mb-6">
              <h1 className="text-2xl font-semibold text-white">
                B·∫£ng ƒëi·ªÅu khi·ªÉn Ng∆∞·ªùi b√°n
              </h1>
              <RouterLink to="/seller/products/create">
                <button className="px-4 py-2 rounded-full bg-gradient-to-r from-[#0EA5E9] to-[#22D3EE] text-black font-medium">
                  T·∫°o s·∫£n ph·∫©m
                </button>
              </RouterLink>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
              <StatCard
                title="Doanh thu"
                value="‚Äî"
                icon={<DollarSign size={24} />}
              />
              <StatCard title="S·∫£n ph·∫©m" value="‚Äî" icon={<Box size={24} />} />
              <StatCard title="ƒê∆°n h√†ng" value="‚Äî" icon={<Users size={24} />} />
              <StatCard
                title="L∆∞·ª£t xem"
                value="‚Äî"
                icon={<BarChart2 size={24} />}
              />
            </div>

            <div className="bg-[rgba(255,255,255,0.02)] border border-[rgba(255,255,255,0.04)] rounded-2xl p-6">
              <h2 className="text-lg font-semibold text-white mb-2">
                Danh s√°ch s·∫£n ph·∫©m g·∫ßn ƒë√¢y
              </h2>
              <p className="text-sm text-slate-400">
                Ch∆∞a c√≥ d·ªØ li·ªáu. Shop: {shopInfo.name} ƒëang ho·∫°t ƒë·ªông.
              </p>
            </div>
          </main>
        </div>
      </div>
    </div>
  );
}
